// Mocks generated by Mockito 5.3.2 from annotations
// in report_it/test/testing_inizializza_discussione/inizializza_prenotazione_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:report_it/data/models/AutenticazioneDAO.dart' as _i7;
import 'package:report_it/data/models/prenotazione_dao.dart' as _i2;
import 'package:report_it/domain/entity/entity_GA/operatoreCUP_entity.dart'
    as _i11;
import 'package:report_it/domain/entity/entity_GA/spid_entity.dart' as _i8;
import 'package:report_it/domain/entity/entity_GA/super_utente.dart' as _i6;
import 'package:report_it/domain/entity/entity_GA/uffPolGiud_entity.dart'
    as _i10;
import 'package:report_it/domain/entity/entity_GA/utente_entity.dart' as _i9;
import 'package:report_it/domain/entity/entity_GPSP/prenotazione_entity.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PrenotazioneDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneDao extends _i1.Mock implements _i2.PrenotazioneDao {
  MockPrenotazioneDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Prenotazione?> retrieveById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Prenotazione?>.value(),
      ) as _i3.Future<_i4.Prenotazione?>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveAll() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAll,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveByUtente(dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByUtente,
          [idUtente],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveByOperatore(dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveAttive() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAttive,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  void accettaPrenotazione({
    required String? idPrenotazione,
    required String? idOperatore,
    required _i5.GeoPoint? coordASL,
    required _i5.Timestamp? dataPrenotazione,
    required String? nomeASL,
    required String? psicologo,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #accettaPrenotazione,
          [],
          {
            #idPrenotazione: idPrenotazione,
            #idOperatore: idOperatore,
            #coordASL: coordASL,
            #dataPrenotazione: dataPrenotazione,
            #nomeASL: nomeASL,
            #psicologo: psicologo,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamAttive(
          _i6.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamAttive,
          [operatore],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByUtente(
          dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByUtente,
          [idUtente],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByOperatore(
          dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
}

/// A class which mocks [AutenticazioneDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockAutenticazioneDAO extends _i1.Mock implements _i7.AutenticazioneDAO {
  MockAutenticazioneDAO() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i8.SPID?> RetrieveSPIDByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveSPIDByEmail,
          [email],
        ),
        returnValue: _i3.Future<_i8.SPID?>.value(),
      ) as _i3.Future<_i8.SPID?>);
  @override
  _i3.Future<_i9.Utente?> RetrieveUtenteByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveUtenteByID,
          [uid],
        ),
        returnValue: _i3.Future<_i9.Utente?>.value(),
      ) as _i3.Future<_i9.Utente?>);
  @override
  _i3.Future<_i8.SPID?> RetrieveSPIDByID(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #RetrieveSPIDByID,
          [uid],
        ),
        returnValue: _i3.Future<_i8.SPID?>.value(),
      ) as _i3.Future<_i8.SPID?>);
  @override
  _i3.Future<_i10.UffPolGiud?> RetrieveUffPolGiudByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveUffPolGiudByID,
          [uid],
        ),
        returnValue: _i3.Future<_i10.UffPolGiud?>.value(),
      ) as _i3.Future<_i10.UffPolGiud?>);
  @override
  _i3.Future<_i11.OperatoreCUP?> RetrieveCUPByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveCUPByID,
          [uid],
        ),
        returnValue: _i3.Future<_i11.OperatoreCUP?>.value(),
      ) as _i3.Future<_i11.OperatoreCUP?>);
  @override
  _i3.Future<List<_i9.Utente?>> RetrieveAllUtente() => (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllUtente,
          [],
        ),
        returnValue: _i3.Future<List<_i9.Utente?>>.value(<_i9.Utente?>[]),
      ) as _i3.Future<List<_i9.Utente?>>);
  @override
  _i3.Future<List<_i8.SPID?>> RetrieveAllSPID() => (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllSPID,
          [],
        ),
        returnValue: _i3.Future<List<_i8.SPID?>>.value(<_i8.SPID?>[]),
      ) as _i3.Future<List<_i8.SPID?>>);
  @override
  _i3.Future<List<_i10.UffPolGiud?>> RetrieveAllUffPolGiud() =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllUffPolGiud,
          [],
        ),
        returnValue:
            _i3.Future<List<_i10.UffPolGiud?>>.value(<_i10.UffPolGiud?>[]),
      ) as _i3.Future<List<_i10.UffPolGiud?>>);
  @override
  _i3.Future<List<_i11.OperatoreCUP?>> RetrieveAllOperatoreCUP() =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllOperatoreCUP,
          [],
        ),
        returnValue:
            _i3.Future<List<_i11.OperatoreCUP?>>.value(<_i11.OperatoreCUP?>[]),
      ) as _i3.Future<List<_i11.OperatoreCUP?>>);
}

/// A class which mocks [PrenotazioneDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneDaoRelaxed extends _i1.Mock
    implements _i2.PrenotazioneDao {
  MockPrenotazioneDaoRelaxed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Prenotazione?> retrieveById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Prenotazione?>.value(),
      ) as _i3.Future<_i4.Prenotazione?>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveAll() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAll,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveByUtente(dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByUtente,
          [idUtente],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveByOperatore(dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  _i3.Future<List<_i4.Prenotazione>> retrieveAttive() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAttive,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.Prenotazione>>.value(<_i4.Prenotazione>[]),
      ) as _i3.Future<List<_i4.Prenotazione>>);
  @override
  void accettaPrenotazione({
    required String? idPrenotazione,
    required String? idOperatore,
    required _i5.GeoPoint? coordASL,
    required _i5.Timestamp? dataPrenotazione,
    required String? nomeASL,
    required String? psicologo,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #accettaPrenotazione,
          [],
          {
            #idPrenotazione: idPrenotazione,
            #idOperatore: idOperatore,
            #coordASL: coordASL,
            #dataPrenotazione: dataPrenotazione,
            #nomeASL: nomeASL,
            #psicologo: psicologo,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamAttive(
          _i6.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamAttive,
          [operatore],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByUtente(
          dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByUtente,
          [idUtente],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByOperatore(
          dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i3.Stream<_i5.QuerySnapshot<Map<String, dynamic>>>);
}

/// A class which mocks [AutenticazioneDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockAutenticazioneDAORelaxed extends _i1.Mock
    implements _i7.AutenticazioneDAO {
  MockAutenticazioneDAORelaxed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i8.SPID?> RetrieveSPIDByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveSPIDByEmail,
          [email],
        ),
        returnValue: _i3.Future<_i8.SPID?>.value(),
      ) as _i3.Future<_i8.SPID?>);
  @override
  _i3.Future<_i9.Utente?> RetrieveUtenteByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveUtenteByID,
          [uid],
        ),
        returnValue: _i3.Future<_i9.Utente?>.value(),
      ) as _i3.Future<_i9.Utente?>);
  @override
  _i3.Future<_i8.SPID?> RetrieveSPIDByID(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #RetrieveSPIDByID,
          [uid],
        ),
        returnValue: _i3.Future<_i8.SPID?>.value(),
      ) as _i3.Future<_i8.SPID?>);
  @override
  _i3.Future<_i10.UffPolGiud?> RetrieveUffPolGiudByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveUffPolGiudByID,
          [uid],
        ),
        returnValue: _i3.Future<_i10.UffPolGiud?>.value(),
      ) as _i3.Future<_i10.UffPolGiud?>);
  @override
  _i3.Future<_i11.OperatoreCUP?> RetrieveCUPByID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveCUPByID,
          [uid],
        ),
        returnValue: _i3.Future<_i11.OperatoreCUP?>.value(),
      ) as _i3.Future<_i11.OperatoreCUP?>);
  @override
  _i3.Future<List<_i9.Utente?>> RetrieveAllUtente() => (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllUtente,
          [],
        ),
        returnValue: _i3.Future<List<_i9.Utente?>>.value(<_i9.Utente?>[]),
      ) as _i3.Future<List<_i9.Utente?>>);
  @override
  _i3.Future<List<_i8.SPID?>> RetrieveAllSPID() => (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllSPID,
          [],
        ),
        returnValue: _i3.Future<List<_i8.SPID?>>.value(<_i8.SPID?>[]),
      ) as _i3.Future<List<_i8.SPID?>>);
  @override
  _i3.Future<List<_i10.UffPolGiud?>> RetrieveAllUffPolGiud() =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllUffPolGiud,
          [],
        ),
        returnValue:
            _i3.Future<List<_i10.UffPolGiud?>>.value(<_i10.UffPolGiud?>[]),
      ) as _i3.Future<List<_i10.UffPolGiud?>>);
  @override
  _i3.Future<List<_i11.OperatoreCUP?>> RetrieveAllOperatoreCUP() =>
      (super.noSuchMethod(
        Invocation.method(
          #RetrieveAllOperatoreCUP,
          [],
        ),
        returnValue:
            _i3.Future<List<_i11.OperatoreCUP?>>.value(<_i11.OperatoreCUP?>[]),
      ) as _i3.Future<List<_i11.OperatoreCUP?>>);
}
