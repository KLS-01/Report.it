// Mocks generated by Mockito 5.3.2 from annotations
// in report_it/test/testing_prenotazione/add_prenotazione_control_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i7;

import 'package:cloud_firestore/cloud_firestore.dart' as _i8;
import 'package:file_picker/file_picker.dart' as _i11;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:report_it/application/entity/entity_GA/super_utente.dart'
    as _i9;
import 'package:report_it/application/entity/entity_GPSP/prenotazione_entity.dart'
    as _i5;
import 'package:report_it/application/repository/prenotazione_controller.dart'
    as _i10;
import 'package:report_it/data/models/AutenticazioneDAO.dart' as _i3;
import 'package:report_it/data/models/prenotazione_dao.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePrenotazioneDao_0 extends _i1.SmartFake
    implements _i2.PrenotazioneDao {
  _FakePrenotazioneDao_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAutenticazioneDAO_1 extends _i1.SmartFake
    implements _i3.AutenticazioneDAO {
  _FakeAutenticazioneDAO_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_2 extends _i1.SmartFake implements _i4.FirebaseAuth {
  _FakeFirebaseAuth_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrenotazione_3 extends _i1.SmartFake implements _i5.Prenotazione {
  _FakePrenotazione_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PrenotazioneDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneDao extends _i1.Mock implements _i2.PrenotazioneDao {
  MockPrenotazioneDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> addPrenotazione(_i5.Prenotazione? prenotazione) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrenotazione,
          [prenotazione],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  void updateId(String? id) => super.noSuchMethod(
        Invocation.method(
          #updateId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateAttribute(
    String? id,
    String? attribute,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAttribute,
          [
            id,
            attribute,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<String?> uploadImpegnativa(
    _i7.Uint8List? asset,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImpegnativa,
          [
            asset,
            name,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  _i6.Future<_i5.Prenotazione?> retrieveById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [id],
        ),
        returnValue: _i6.Future<_i5.Prenotazione?>.value(),
      ) as _i6.Future<_i5.Prenotazione?>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveAll() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAll,
          [],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveByUtente(dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByUtente,
          [idUtente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveByOperatore(dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveAttive() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAttive,
          [],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  void accettaPrenotazione({
    required String? idPrenotazione,
    required String? idOperatore,
    required _i8.GeoPoint? coordASL,
    required _i8.Timestamp? dataPrenotazione,
    required String? nomeASL,
    required String? psicologo,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #accettaPrenotazione,
          [],
          {
            #idPrenotazione: idPrenotazione,
            #idOperatore: idOperatore,
            #coordASL: coordASL,
            #dataPrenotazione: dataPrenotazione,
            #nomeASL: nomeASL,
            #psicologo: psicologo,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamAttive(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamAttive,
          [operatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByUtente(
          dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByUtente,
          [idUtente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByOperatore(
          dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
}

/// A class which mocks [PrenotazioneController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneController extends _i1.Mock
    implements _i10.PrenotazioneController {
  MockPrenotazioneController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PrenotazioneDao get prenotazioneDao => (super.noSuchMethod(
        Invocation.getter(#prenotazioneDao),
        returnValue: _FakePrenotazioneDao_0(
          this,
          Invocation.getter(#prenotazioneDao),
        ),
      ) as _i2.PrenotazioneDao);
  @override
  set prenotazioneDao(_i2.PrenotazioneDao? _prenotazioneDao) =>
      super.noSuchMethod(
        Invocation.setter(
          #prenotazioneDao,
          _prenotazioneDao,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.AutenticazioneDAO get authDao => (super.noSuchMethod(
        Invocation.getter(#authDao),
        returnValue: _FakeAutenticazioneDAO_1(
          this,
          Invocation.getter(#authDao),
        ),
      ) as _i3.AutenticazioneDAO);
  @override
  set authDao(_i3.AutenticazioneDAO? _authDao) => super.noSuchMethod(
        Invocation.setter(
          #authDao,
          _authDao,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FirebaseAuth get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeFirebaseAuth_2(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i4.FirebaseAuth);
  @override
  _i6.Future<String?> addPrenotazioneControl({
    required String? nome,
    required String? cognome,
    required String? numeroTelefono,
    required String? indirizzo,
    required String? email,
    required String? cf,
    required String? cap,
    required String? provincia,
    required _i11.FilePickerResult? impegnativa,
    required String? descrizione,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrenotazioneControl,
          [],
          {
            #nome: nome,
            #cognome: cognome,
            #numeroTelefono: numeroTelefono,
            #indirizzo: indirizzo,
            #email: email,
            #cf: cf,
            #cap: cap,
            #provincia: provincia,
            #impegnativa: impegnativa,
            #descrizione: descrizione,
          },
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  void uploadImpegnativa(
    String? idPrenotazione,
    _i11.FilePickerResult? fileResult,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #uploadImpegnativa,
          [
            idPrenotazione,
            fileResult,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaAttiveByUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaAttiveByUtente,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaStoricoByUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaStoricoByUtente,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaStoricoByOperatore(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaStoricoByOperatore,
          [operatore],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaAttive(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaAttive,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<bool> inizializzaPrenotazione(
    String? idPrenotazione,
    _i9.SuperUtente? utente,
    _i8.Timestamp? dataPrenotazione,
    String? psicologo,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inizializzaPrenotazione,
          [
            idPrenotazione,
            utente,
            dataPrenotazione,
            psicologo,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamAttive(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamAttive,
          [operatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamAttiveUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamAttiveUtente,
          [utente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>
      generaStreamStoricoOperatore(_i9.SuperUtente? operatore) =>
          (super.noSuchMethod(
            Invocation.method(
              #generaStreamStoricoOperatore,
              [operatore],
            ),
            returnValue:
                _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
          ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamStoricoUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamStoricoUtente,
          [utente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Prenotazione prenotazioneFromJson(
          _i8.QueryDocumentSnapshot<Map<String, dynamic>>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #prenotazioneFromJson,
          [json],
        ),
        returnValue: _FakePrenotazione_3(
          this,
          Invocation.method(
            #prenotazioneFromJson,
            [json],
          ),
        ),
      ) as _i5.Prenotazione);
  @override
  _i6.Future<_i5.Prenotazione?> retrieveById(String? idPrenotazione) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [idPrenotazione],
        ),
        returnValue: _i6.Future<_i5.Prenotazione?>.value(),
      ) as _i6.Future<_i5.Prenotazione?>);
}

/// A class which mocks [PrenotazioneDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneDaoRelaxed extends _i1.Mock
    implements _i2.PrenotazioneDao {
  MockPrenotazioneDaoRelaxed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> addPrenotazione(_i5.Prenotazione? prenotazione) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrenotazione,
          [prenotazione],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  void updateId(String? id) => super.noSuchMethod(
        Invocation.method(
          #updateId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateAttribute(
    String? id,
    String? attribute,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAttribute,
          [
            id,
            attribute,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<String?> uploadImpegnativa(
    _i7.Uint8List? asset,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImpegnativa,
          [
            asset,
            name,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  _i6.Future<_i5.Prenotazione?> retrieveById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [id],
        ),
        returnValue: _i6.Future<_i5.Prenotazione?>.value(),
      ) as _i6.Future<_i5.Prenotazione?>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveAll() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAll,
          [],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveByUtente(dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByUtente,
          [idUtente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveByOperatore(dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> retrieveAttive() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAttive,
          [],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  void accettaPrenotazione({
    required String? idPrenotazione,
    required String? idOperatore,
    required _i8.GeoPoint? coordASL,
    required _i8.Timestamp? dataPrenotazione,
    required String? nomeASL,
    required String? psicologo,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #accettaPrenotazione,
          [],
          {
            #idPrenotazione: idPrenotazione,
            #idOperatore: idOperatore,
            #coordASL: coordASL,
            #dataPrenotazione: dataPrenotazione,
            #nomeASL: nomeASL,
            #psicologo: psicologo,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamAttive(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamAttive,
          [operatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByUtente(
          dynamic idUtente) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByUtente,
          [idUtente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> retrieveStreamByOperatore(
          dynamic idOperatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveStreamByOperatore,
          [idOperatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
}

/// A class which mocks [PrenotazioneController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioneControllerRelaxed extends _i1.Mock
    implements _i10.PrenotazioneController {
  MockPrenotazioneControllerRelaxed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PrenotazioneDao get prenotazioneDao => (super.noSuchMethod(
        Invocation.getter(#prenotazioneDao),
        returnValue: _FakePrenotazioneDao_0(
          this,
          Invocation.getter(#prenotazioneDao),
        ),
      ) as _i2.PrenotazioneDao);
  @override
  set prenotazioneDao(_i2.PrenotazioneDao? _prenotazioneDao) =>
      super.noSuchMethod(
        Invocation.setter(
          #prenotazioneDao,
          _prenotazioneDao,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.AutenticazioneDAO get authDao => (super.noSuchMethod(
        Invocation.getter(#authDao),
        returnValue: _FakeAutenticazioneDAO_1(
          this,
          Invocation.getter(#authDao),
        ),
      ) as _i3.AutenticazioneDAO);
  @override
  set authDao(_i3.AutenticazioneDAO? _authDao) => super.noSuchMethod(
        Invocation.setter(
          #authDao,
          _authDao,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FirebaseAuth get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeFirebaseAuth_2(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i4.FirebaseAuth);
  @override
  _i6.Future<String?> addPrenotazioneControl({
    required String? nome,
    required String? cognome,
    required String? numeroTelefono,
    required String? indirizzo,
    required String? email,
    required String? cf,
    required String? cap,
    required String? provincia,
    required _i11.FilePickerResult? impegnativa,
    required String? descrizione,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPrenotazioneControl,
          [],
          {
            #nome: nome,
            #cognome: cognome,
            #numeroTelefono: numeroTelefono,
            #indirizzo: indirizzo,
            #email: email,
            #cf: cf,
            #cap: cap,
            #provincia: provincia,
            #impegnativa: impegnativa,
            #descrizione: descrizione,
          },
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  void uploadImpegnativa(
    String? idPrenotazione,
    _i11.FilePickerResult? fileResult,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #uploadImpegnativa,
          [
            idPrenotazione,
            fileResult,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaAttiveByUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaAttiveByUtente,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaStoricoByUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaStoricoByUtente,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaStoricoByOperatore(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaStoricoByOperatore,
          [operatore],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<List<_i5.Prenotazione>> visualizzaAttive(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #visualizzaAttive,
          [utente],
        ),
        returnValue:
            _i6.Future<List<_i5.Prenotazione>>.value(<_i5.Prenotazione>[]),
      ) as _i6.Future<List<_i5.Prenotazione>>);
  @override
  _i6.Future<bool> inizializzaPrenotazione(
    String? idPrenotazione,
    _i9.SuperUtente? utente,
    _i8.Timestamp? dataPrenotazione,
    String? psicologo,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inizializzaPrenotazione,
          [
            idPrenotazione,
            utente,
            dataPrenotazione,
            psicologo,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamAttive(
          _i9.SuperUtente? operatore) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamAttive,
          [operatore],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamAttiveUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamAttiveUtente,
          [utente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>
      generaStreamStoricoOperatore(_i9.SuperUtente? operatore) =>
          (super.noSuchMethod(
            Invocation.method(
              #generaStreamStoricoOperatore,
              [operatore],
            ),
            returnValue:
                _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
          ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>> generaStreamStoricoUtente(
          _i9.SuperUtente? utente) =>
      (super.noSuchMethod(
        Invocation.method(
          #generaStreamStoricoUtente,
          [utente],
        ),
        returnValue:
            _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i8.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Prenotazione prenotazioneFromJson(
          _i8.QueryDocumentSnapshot<Map<String, dynamic>>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #prenotazioneFromJson,
          [json],
        ),
        returnValue: _FakePrenotazione_3(
          this,
          Invocation.method(
            #prenotazioneFromJson,
            [json],
          ),
        ),
      ) as _i5.Prenotazione);
  @override
  _i6.Future<_i5.Prenotazione?> retrieveById(String? idPrenotazione) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveById,
          [idPrenotazione],
        ),
        returnValue: _i6.Future<_i5.Prenotazione?>.value(),
      ) as _i6.Future<_i5.Prenotazione?>);
}
